name: deploy

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

jobs:
  build:
    uses: ./.github/workflows/reusable_build.yml

  deploy:
    name: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    container: governmentpaas/cf-cli
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: ./node_modules
          key: 18f-bot-${{ runner.os }}-${{ hashFiles('package.json') }}-v1
      - uses: actions/cache@v3
        id: npmcache
        with:
          path: ./npm-cache
          key: 18f-bot-${{ runner.os }}-npmcache-${{ hashFiles('package.json') }}-v1
      - name: add extra deployment steps for dev
        id: devSteps
        if: ${{ inputs.environment == 'dev' }}
        env:
          CF_API: ${{ secrets.CF_API }}
          CF_ORG: ${{ secrets.CF_ORG }}
          CF_PASSWORD: ${{ secrets.CF_PASSWORD }}
          CF_SPACE: ${{ inputs.environment }}
          CF_USERNAME: ${{ secrets.CF_USERNAME }}
        run: |
          cf login -a $CF_API -u $CF_USERNAME -p $CF_PASSWORD -o $CF_ORG -s $CF_SPACE
          cf create-service aws-rds micro-psql charlie-brain
          STATUS="$(cf service charlie-brain | grep "  status:" | awk -F ":" '{print $2}' | xargs)"
          while [ "$STATUS"  != "create succeeded" ]
          do
            echo "Waiting for database service to be ready..."
            sleep 10
            STATUS="$(cf service charlie-brain | grep "  status:" | awk -F ":" '{print $2}' | xargs echo)"
          done
      - name: push to cloud.gov
        env:
          CF_API: ${{ secrets.CF_API }}
          CF_ORG: ${{ secrets.CF_ORG }}
          CF_PASSWORD: ${{ secrets.CF_PASSWORD }}
          CF_SPACE: ${{ inputs.environment }}
          CF_USERNAME: ${{ secrets.CF_USERNAME }}
        run: |
          cf login -a $CF_API -u $CF_USERNAME -p $CF_PASSWORD -o $CF_ORG -s $CF_SPACE
          cf push -f manifest.yml --vars-file ./${{ inputs.environment }}.yml
